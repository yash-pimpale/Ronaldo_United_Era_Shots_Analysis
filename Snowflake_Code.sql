-- SPECIFY WAREHOUSE, DATABASE AND SCHEMA NAME
USE WAREHOUSE CASE_STUDY_WH;
USE DATABASE SNOWFLAKE_DB;
USE SCHEMA ANALYTIC;

--TRUNCATE TABLE RONALDO_YDS_TB

-- CREATE TABLE TO LOAD DATA FROM CSV
CREATE OR REPLACE TABLE RONALDO_YDS_TB (
   ROW_ID NUMBER,
   MATCH_EVENT_ID NUMBER,
   LOCATION_X NUMBER,
   LOCATION_Y NUMBER,
   REMAINING_MIN NUMBER,
   POWER_OF_SHOT NUMBER,
   KNOCKOUT_MATCH NUMBER,
   GAME_SEASON VARCHAR(20),
   REMAINING_SEC NUMBER,
   DISTANCE_OF_SHOT	NUMBER,
   IS_GOAL NUMBER,
   AREA_OF_SHOT VARCHAR(30),	
   SHOT_BASICS VARCHAR(20),
   RANGE_OF_SHOT VARCHAR(20),
   TEAM_NAME VARCHAR(30),
   DATE_OF_GAME	DATE,
   HOME_AWAY VARCHAR(30),
   SHOT_ID_NUMBER NUMBER,
   LAT_LNG VARCHAR(50),
   TYPE_OF_SHOT	VARCHAR(20),
   TYPE_OF_COMBINED_SHOT VARCHAR(20),	
   MATCH_ID	NUMBER,
   TEAM_ID NUMBER,
   REMAINING_MIN_1 NUMBER(10,2),
   POWER_OF_SHOT_1 NUMBER(10,2),
   KNOCKOUT_MATCH_1 NUMBER(10,2),
   REMAINING_SEC_1 NUMBER(10,2),
   DISTANCE_OF_SHOT_1 NUMBER(10,2)
);

--LOAD DATA INTO TABLE FROM INTERNAL STAGE
COPY INTO RONALDO_YDS_TB
   FROM @LOAD_CSV/yds_data.csv
   FILE_FORMAT = (TYPE = 'CSV' FIELD_DELIMITER = ',' SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '"');

-- DISPLAY FIRST 10 ROWS
SELECT * FROM RONALDO_YDS_TB LIMIT 10;

-- LOAD DATA AUTOMATICALLY FROM S3 BUCKET IN REAL TIME
-- CREATE CSV FILE FORMAT
CREATE OR REPLACE FILE FORMAT CSV_FORMAT
TYPE = 'CSV' 
FIELD_DELIMITER = ',' 
SKIP_HEADER = 1 
FIELD_OPTIONALLY_ENCLOSED_BY = '"';

-- CREATE EXTERNAL STAGE (DIRECT USING AWS USER KEYID)
CREATE OR REPLACE STAGE CONNECT_S3
URL = 's3://s3-pipe-snowflake/csv_files'
CREDENTIALS = (AWS_KEY_ID = 'AKIAUPHIWDMZK2TNMFIB' AWS_SECRET_KEY = 'NoewYXATooFvRuR6T24J+Y4JoNNQPlcfU1f6C6zc');

-- CREATE SNOWPIPE TO INGEST DATA FROM S3 AUTOMATICALLY
CREATE OR REPLACE PIPE S3_SNOWFLAKE_PIPE
AUTO_INGEST = TRUE
AS
COPY INTO RONALDO_YDS_TB
FROM @CONNECT_S3
FILE_FORMAT = CSV_FORMAT;

-- DISPLAY ALL THE PIPES PRESENT IN THE DB
SHOW PIPES;

--CHECK STATUS OF PIPE
SELECT SYSTEM$PIPE_STATUS('S3_SNOWFLAKE_PIPE');

--CHECK SNOWPIPE LOGS
SELECT * FROM TABLE(INFORMATION_SCHEMA.PIPE_USAGE_HISTORY(
    DATE_RANGE_START => DATEADD('day', -5, CURRENT_DATE()),
    DATE_RANGE_END => CURRENT_DATE()))
ORDER BY END_TIME DESC;

-- PAUSE SNOWPIPE 
--ALTER PIPE S3_SNOWFLAKE_PIPE SET PIPE_EXECUTION_PAUSED = true;

-- DISPLAY FIRST 10 ROWS
SELECT COUNT(1) FROM RONALDO_YDS_TB;